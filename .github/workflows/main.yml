name: Container Workflow
on:
  push:
  workflow_dispatch:

env:
  ACR_LOGON_SERVER: ${{ secrets.ACR_NAME }}.azurecr.io
  IMAGE_NAME: ${{ secrets.ACR_NAME }}.azurecr.io/webapp:${{ github.sha }}

jobs:
  build-deploy-image:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.1

    - name: Build and Push Image
      uses: docker/login-action@v3.0.0
      with:
        registry: ${{ env.ACR_LOGON_SERVER }} 
        username: ${{ secrets.SERVICE_PRINCIPAL_ID }}
        password: ${{ secrets.SERVICE_PRINCIPAL_PASSWORD }}

    - run: docker build . -t ${{ env.IMAGE_NAME }} -f ContTest/Dockerfile
    - run: docker push ${{ env.IMAGE_NAME }}

  deploy-to-aks:
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/master'
    needs: build-deploy-image

    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.1

    - name: Set AKS Context
      uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}' # Azure credentials
        resource-group: '${{ secrets.AKS_RESOURCE_GROUP }}'
        cluster-name: '${{ secrets.AKS_NAME }}'

    - name: Create secret in Kubernetes cluster
      uses: Azure/k8s-create-secret@v4.0
      with:
        secret-name: ${{ secrets.AKS_SECRET }}
        container-registry-url: ${{ env.ACR_LOGON_SERVER }}
        container-registry-username: ${{ secrets.SERVICE_PRINCIPAL_ID }}
        container-registry-password: ${{ secrets.SERVICE_PRINCIPAL_PASSWORD }}

    - name: Deploy to Kubernetes cluster
      uses: Azure/k8s-deploy@v4.9
      with:
        manifests: |
          manifests/deployment.yml
          manifests/service.yml
        images: |
          ${{ env.IMAGE_NAME }}
        imagepullsecrets: |
          ${{ secrets.AKS_SECRET }}
